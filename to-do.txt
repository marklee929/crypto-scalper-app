✅ [오늘의 작업 플랜] – Flutter 자동매매 시스템 마무리
📌 1. 자동매매 대상 코인 입력처리 개선
 TextFormField로 targetCoin을 수동 입력 가능하도록 UI 구현

 시작 시 입력값이 없으면 자동매매 시작 버튼 비활성화

 자동매매 시작 시 해당 코인명을 JSON에 저장
→ 이후 앱 로딩 시 자동 복원하여 입력창에 표시되도록 구현
🔄 SharedPreferences 또는 local file(json) 사용 가능

📌 2. 매수/매도 전량 처리 리팩토링
 buyAll, sellAll 함수에서 qty 인자 제거 (어제 완료된 상태)

 호출하는 쪽에서 잔액/보유량 기반 계산 없이 전액/전량 처리되도록 통일 확인

📌 3. autoTradeService 코드 분리 및 구조화
 autoTradeService.dart가 너무 길어졌으므로 분리 시작

✅ 매수/매도 전략: tactics/auto_trade_strategy.dart로 이동

✅ 추세 감지, 포지션 판단 등은 strategy/market_analysis.dart로 분리 가능

 AutoTradeService 내부에서는 전략 로직만 호출하고, UI와 독립

📌 4. 자동매매 시작 흐름 점검 및 유효성 체크
 시작 버튼 클릭 시 → 입력값 확인 → 없으면 Alert 또는 Toast 표시

 시작 시 내부 로직에 현재 입력값을 넘겨서 서비스 시작 연동

📌 5. LogViewScreen 기능 강화
 로그 파일 목록에 파일 크기 표시

 파일 선택 후 복사 or 저장 기능 (선택적)

 실시간 로그에 색상 강조 및 토스트 알림 추가
예: BUY, SELL, ERROR 키워드 색상 다르게

1. 🔄 Dashboard 수치 실시간 업데이트

2. 📊 LogViewScreen 연결 및 로그 리스트 출력

3. 🧠 자동매매 루프 상태공유 구조

4. 📤 실시간 거래/상태 로그 저장도

5. 📱 앱 실행 시 자동매매 루프 자동 시작 (선택)

6. 🔕 Flutter Local Notification 정리

🛠️ 남은 항목들 (최종 마무리 단계)
📁 파일 다운로드 기능 (앱 내부 폴더에 저장 or 외부 저장소 접근)

📊 로그 파일 크기 표시 (KB/MB 단위 표시, 파일명 옆에 추가)

✅ 선택 삭제 또는 내보내기 기능 (선택한 파일 공유 or 삭제 기능)

📤 앱 푸시 or 로컬 알림 처리 (선택적)

🧪 앱 내 로그 계속 유지되도록 백그라운드 실행 유지 확인

🔁 앱 내 자동매매 루프와 UI 분리 확인 (예: Isolate나 Timer 유지)

